package edu.tamu.webtoxpi.Server.Models.Classes;
// Generated Aug 26, 2015 7:27:58 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "login") )
public class Users implements java.io.Serializable
{

	private int id;
	private String login;
	private String password;
	private String firstname;
	private String lastname;
	private String email;
	private Date registereddt;
	private Date lastvisitdt;
	private Set<Results> resultses = new HashSet<Results>(0);
	private Set<Importinfo> importinfos = new HashSet<Importinfo>(0);
	private Set<Components> componentses = new HashSet<Components>(0);
	private Set<Types> typeses = new HashSet<Types>(0);
	private Set<Viewtemplates> viewtemplatesesForUpdatedby = new HashSet<Viewtemplates>(0);
	private Set<Chemicals> chemicalses = new HashSet<Chemicals>(0);
	private Set<Weights> weightses = new HashSet<Weights>(0);
	private Set<Searchtemplates> searchtemplatesesForUpdatedby = new HashSet<Searchtemplates>(0);
	private Set<Sources> sourceses = new HashSet<Sources>(0);
	private Set<Casregistrynumbers> casregistrynumberses = new HashSet<Casregistrynumbers>(0);
	private Set<Searchtemplates> searchtemplatesesForUserId = new HashSet<Searchtemplates>(0);
	private Set<Orders> orderses = new HashSet<Orders>(0);
	private Set<Viewtemplates> viewtemplatesesForUserId = new HashSet<Viewtemplates>(0);
	private Set<Notes> noteses = new HashSet<Notes>(0);
	private Set<Units> unitses = new HashSet<Units>(0);
	private Set<Groups> groupses = new HashSet<Groups>(0);
	private Set<Componentsources> componentsourceses = new HashSet<Componentsources>(0);

	public Users()
	{
	}

	public Users(int id, String login, String password, String firstname, String lastname, String email, Date registereddt, Date lastvisitdt)
	{
		this.id = id;
		this.login = login;
		this.password = password;
		this.firstname = firstname;
		this.lastname = lastname;
		this.email = email;
		this.registereddt = registereddt;
		this.lastvisitdt = lastvisitdt;
	}

	public Users(int id, String login, String password, String firstname, String lastname, String email, Date registereddt, Date lastvisitdt, Set<Results> resultses, Set<Importinfo> importinfos,
			Set<Components> componentses, Set<Types> typeses, Set<Viewtemplates> viewtemplatesesForUpdatedby, Set<Chemicals> chemicalses, Set<Weights> weightses,
			Set<Searchtemplates> searchtemplatesesForUpdatedby, Set<Sources> sourceses, Set<Casregistrynumbers> casregistrynumberses, Set<Searchtemplates> searchtemplatesesForUserId, Set<Orders> orderses,
			Set<Viewtemplates> viewtemplatesesForUserId, Set<Notes> noteses, Set<Units> unitses, Set<Groups> groupses, Set<Componentsources> componentsourceses)
	{
		this.id = id;
		this.login = login;
		this.password = password;
		this.firstname = firstname;
		this.lastname = lastname;
		this.email = email;
		this.registereddt = registereddt;
		this.lastvisitdt = lastvisitdt;
		this.resultses = resultses;
		this.importinfos = importinfos;
		this.componentses = componentses;
		this.typeses = typeses;
		this.viewtemplatesesForUpdatedby = viewtemplatesesForUpdatedby;
		this.chemicalses = chemicalses;
		this.weightses = weightses;
		this.searchtemplatesesForUpdatedby = searchtemplatesesForUpdatedby;
		this.sourceses = sourceses;
		this.casregistrynumberses = casregistrynumberses;
		this.searchtemplatesesForUserId = searchtemplatesesForUserId;
		this.orderses = orderses;
		this.viewtemplatesesForUserId = viewtemplatesesForUserId;
		this.noteses = noteses;
		this.unitses = unitses;
		this.groupses = groupses;
		this.componentsourceses = componentsourceses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId()
	{
		return this.id;
	}

	public void setId(int id)
	{
		this.id = id;
	}

	@Column(name = "login", unique = true, nullable = false)
	public String getLogin()
	{
		return this.login;
	}

	public void setLogin(String login)
	{
		this.login = login;
	}

	@Column(name = "password", nullable = false)
	public String getPassword()
	{
		return this.password;
	}

	public void setPassword(String password)
	{
		this.password = password;
	}

	@Column(name = "firstname", nullable = false)
	public String getFirstname()
	{
		return this.firstname;
	}

	public void setFirstname(String firstname)
	{
		this.firstname = firstname;
	}

	@Column(name = "lastname", nullable = false)
	public String getLastname()
	{
		return this.lastname;
	}

	public void setLastname(String lastname)
	{
		this.lastname = lastname;
	}

	@Column(name = "email", nullable = false)
	public String getEmail()
	{
		return this.email;
	}

	public void setEmail(String email)
	{
		this.email = email;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registereddt", nullable = false, length = 29)
	public Date getRegistereddt()
	{
		return this.registereddt;
	}

	public void setRegistereddt(Date registereddt)
	{
		this.registereddt = registereddt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastvisitdt", nullable = false, length = 29)
	public Date getLastvisitdt()
	{
		return this.lastvisitdt;
	}

	public void setLastvisitdt(Date lastvisitdt)
	{
		this.lastvisitdt = lastvisitdt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Results> getResultses()
	{
		return this.resultses;
	}

	public void setResultses(Set<Results> resultses)
	{
		this.resultses = resultses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Importinfo> getImportinfos()
	{
		return this.importinfos;
	}

	public void setImportinfos(Set<Importinfo> importinfos)
	{
		this.importinfos = importinfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Components> getComponentses()
	{
		return this.componentses;
	}

	public void setComponentses(Set<Components> componentses)
	{
		this.componentses = componentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Types> getTypeses()
	{
		return this.typeses;
	}

	public void setTypeses(Set<Types> typeses)
	{
		this.typeses = typeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByUpdatedby")
	public Set<Viewtemplates> getViewtemplatesesForUpdatedby()
	{
		return this.viewtemplatesesForUpdatedby;
	}

	public void setViewtemplatesesForUpdatedby(Set<Viewtemplates> viewtemplatesesForUpdatedby)
	{
		this.viewtemplatesesForUpdatedby = viewtemplatesesForUpdatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Chemicals> getChemicalses()
	{
		return this.chemicalses;
	}

	public void setChemicalses(Set<Chemicals> chemicalses)
	{
		this.chemicalses = chemicalses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Weights> getWeightses()
	{
		return this.weightses;
	}

	public void setWeightses(Set<Weights> weightses)
	{
		this.weightses = weightses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByUpdatedby")
	public Set<Searchtemplates> getSearchtemplatesesForUpdatedby()
	{
		return this.searchtemplatesesForUpdatedby;
	}

	public void setSearchtemplatesesForUpdatedby(Set<Searchtemplates> searchtemplatesesForUpdatedby)
	{
		this.searchtemplatesesForUpdatedby = searchtemplatesesForUpdatedby;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Sources> getSourceses()
	{
		return this.sourceses;
	}

	public void setSourceses(Set<Sources> sourceses)
	{
		this.sourceses = sourceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Casregistrynumbers> getCasregistrynumberses()
	{
		return this.casregistrynumberses;
	}

	public void setCasregistrynumberses(Set<Casregistrynumbers> casregistrynumberses)
	{
		this.casregistrynumberses = casregistrynumberses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByUserId")
	public Set<Searchtemplates> getSearchtemplatesesForUserId()
	{
		return this.searchtemplatesesForUserId;
	}

	public void setSearchtemplatesesForUserId(Set<Searchtemplates> searchtemplatesesForUserId)
	{
		this.searchtemplatesesForUserId = searchtemplatesesForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Orders> getOrderses()
	{
		return this.orderses;
	}

	public void setOrderses(Set<Orders> orderses)
	{
		this.orderses = orderses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByUserId")
	public Set<Viewtemplates> getViewtemplatesesForUserId()
	{
		return this.viewtemplatesesForUserId;
	}

	public void setViewtemplatesesForUserId(Set<Viewtemplates> viewtemplatesesForUserId)
	{
		this.viewtemplatesesForUserId = viewtemplatesesForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Notes> getNoteses()
	{
		return this.noteses;
	}

	public void setNoteses(Set<Notes> noteses)
	{
		this.noteses = noteses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Units> getUnitses()
	{
		return this.unitses;
	}

	public void setUnitses(Set<Units> unitses)
	{
		this.unitses = unitses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Groups> getGroupses()
	{
		return this.groupses;
	}

	public void setGroupses(Set<Groups> groupses)
	{
		this.groupses = groupses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Componentsources> getComponentsourceses()
	{
		return this.componentsourceses;
	}

	public void setComponentsourceses(Set<Componentsources> componentsourceses)
	{
		this.componentsourceses = componentsourceses;
	}

}
